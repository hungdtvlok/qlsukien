package com.example.qlsukien;

import androidx.appcompat.app.ActionBarDrawerToggle;
import androidx.appcompat.app.AppCompatActivity;
import androidx.appcompat.widget.Toolbar;
import androidx.drawerlayout.widget.DrawerLayout;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView;

import android.app.AlertDialog;
import android.content.Intent;
import android.os.Bundle;
import android.text.Editable;
import android.text.TextWatcher;
import android.widget.EditText;
import android.widget.Toast;

import com.android.volley.Request;
import com.android.volley.RequestQueue;
import com.android.volley.toolbox.JsonObjectRequest;
import com.android.volley.toolbox.Volley;
import com.google.android.material.navigation.NavigationView;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;
import java.util.Collections;

import java.util.ArrayList;
import java.util.Collections;

public class ThongKeActivity extends AppCompatActivity {

    // üîπ Khai b√°o c√°c th√†nh ph·∫ßn giao di·ªán
    private RecyclerView recyclerView; // Danh s√°ch hi·ªÉn th·ªã th·ªëng k√™
    private ThongKeAdapter adapter; // Adapter cho RecyclerView
    private ArrayList<ThongKe> listThongKe; // Danh s√°ch g·ªëc t·ª´ API
    private ArrayList<ThongKe> filteredList; // Danh s√°ch sau khi l·ªçc t√¨m ki·∫øm
    private EditText searchView; // √î nh·∫≠p ƒë·ªÉ t√¨m ki·∫øm

    // üîπ URL API th·ªëng k√™
    private static final String BASE_URL = "https://qlsukien-1.onrender.com/api/statistics";

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_thongke); // G√°n layout giao di·ªán

        // üîπ √Ånh x·∫° RecyclerView v√† c·∫•u h√¨nh hi·ªÉn th·ªã d·∫°ng danh s√°ch d·ªçc
        recyclerView = findViewById(R.id.recyclerThongKe);
        recyclerView.setLayoutManager(new LinearLayoutManager(this));

        // üîπ √Ånh x·∫° √¥ t√¨m ki·∫øm
        searchView = findViewById(R.id.searchView);

        // üîπ Kh·ªüi t·∫°o danh s√°ch
        listThongKe = new ArrayList<>();   // Danh s√°ch d·ªØ li·ªáu t·ª´ API
        filteredList = new ArrayList<>();  // Danh s√°ch hi·ªÉn th·ªã th·ª±c t·∫ø

        // üîπ G√°n adapter cho RecyclerView (hi·ªÉn th·ªã danh s√°ch filteredList)
        adapter = new ThongKeAdapter(filteredList);
        recyclerView.setAdapter(adapter);

        // üîπ G·ªçi API ƒë·ªÉ l·∫•y d·ªØ li·ªáu th·ªëng k√™
        loadStatistics();

        // üîπ L·∫Øng nghe thay ƒë·ªïi trong √¥ t√¨m ki·∫øm ƒë·ªÉ l·ªçc danh s√°ch
        searchView.addTextChangedListener(new TextWatcher() {
            @Override
            public void beforeTextChanged(CharSequence s, int start, int count, int after) {
                // Kh√¥ng c·∫ßn x·ª≠ l√Ω tr∆∞·ªõc khi text thay ƒë·ªïi
            }

            @Override
            public void onTextChanged(CharSequence s, int start, int before, int count) {
                // M·ªói khi ng∆∞·ªùi d√πng nh·∫≠p k√Ω t·ª±, g·ªçi h√†m l·ªçc danh s√°ch
                filterList(s.toString());
            }

            @Override
            public void afterTextChanged(Editable s) {
                // Kh√¥ng c·∫ßn x·ª≠ l√Ω sau khi text thay ƒë·ªïi
            }
        });

        // üîπ √Ånh x·∫° Toolbar v√† ƒë·∫∑t l√†m ActionBar
        Toolbar toolbar = findViewById(R.id.toolbar_thongke);
        setSupportActionBar(toolbar);

        // üîπ C·∫•u h√¨nh DrawerLayout v√† NavigationView (menu b√™n tr√°i)
        DrawerLayout drawerLayout = findViewById(R.id.drawer_layout);
        NavigationView navigationView = findViewById(R.id.navigation_view);

        // üîπ T·∫°o n√∫t 3 g·∫°ch m·ªü menu (hamburger button)
        ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(
                this, drawerLayout, toolbar,
                R.string.navigation_drawer_open,
                R.string.navigation_drawer_close
        );
        drawerLayout.addDrawerListener(toggle);
        toggle.syncState();

        // üîπ X·ª≠ l√Ω s·ª± ki·ªán khi ch·ªçn item trong Navigation Drawer
        navigationView.setNavigationItemSelectedListener(item -> {
            int id = item.getItemId(); // L·∫•y ID menu ƒë∆∞·ª£c ch·ªçn

            if (id == R.id.nav_trangchu) {
                // Chuy·ªÉn sang trang ch·ªß
                startActivity(new Intent(this, MainActivity.class));
            } else if (id == R.id.nav_sukien) {
                // Chuy·ªÉn sang trang qu·∫£n l√Ω s·ª± ki·ªán
                startActivity(new Intent(this, SuKienActivity.class));
            } else if (id == R.id.nav_dangky) {
                // Chuy·ªÉn sang danh s√°ch s·ª± ki·ªán ƒë√£ ƒëƒÉng k√Ω
                startActivity(new Intent(this, SuKienDaDangKyAllActivity.class));
            } else if (id == R.id.nav_thamgia) {
                // Chuy·ªÉn sang trang ng∆∞·ªùi tham gia
                startActivity(new Intent(this, NguoithamgiaActivity.class));
            } else if (id == R.id.nav_thongke) {
                // ƒêang ·ªü trang th·ªëng k√™ ‚Üí kh√¥ng c·∫ßn chuy·ªÉn
            } else if (id == R.id.nav_thoat) {
                // Hi·ªÉn th·ªã h·ªôp tho·∫°i x√°c nh·∫≠n tho√°t
                showExitDialog();
            }

            // üîπ ƒê√≥ng menu sau khi ch·ªçn
            drawerLayout.closeDrawers();
            return true;
        });
    }

    /**
     * üîπ G·ªçi API l·∫•y danh s√°ch th·ªëng k√™
     */
    private void loadStatistics() {
        // T·∫°o RequestQueue ƒë·ªÉ g·ª≠i y√™u c·∫ßu m·∫°ng
        RequestQueue queue = Volley.newRequestQueue(this);

        // G·ª≠i request GET ƒë·∫øn API
        JsonObjectRequest request = new JsonObjectRequest(
                Request.Method.GET,
                BASE_URL,
                null,
                response -> { // ‚úÖ X·ª≠ l√Ω khi API tr·∫£ v·ªÅ th√†nh c√¥ng
                    try {
                        // L·∫•y m·∫£ng JSON "statistics" t·ª´ k·∫øt qu·∫£
                        JSONArray arr = response.getJSONArray("statistics");
                        listThongKe.clear(); // X√≥a danh s√°ch c≈©

                        // Duy·ªát qua t·ª´ng ph·∫ßn t·ª≠ JSON
                        for (int i = 0; i < arr.length(); i++) {
                            JSONObject obj = arr.getJSONObject(i);
                            String eventName = obj.optString("eventName", "Kh√¥ng x√°c ƒë·ªãnh");
                            int count = obj.optInt("count", 0);

                            // T·∫°o ƒë·ªëi t∆∞·ª£ng ThongKe v√† th√™m v√†o danh s√°ch
                            listThongKe.add(new ThongKe(eventName, count));
                        }

                        // üîπ S·∫Øp x·∫øp listThongKe theo t√™n s·ª± ki·ªán A ‚Üí Z
                        Collections.sort(listThongKe, (a, b) -> a.getEventName().compareToIgnoreCase(b.getEventName()));

                        // Ban ƒë·∫ßu hi·ªÉn th·ªã to√†n b·ªô danh s√°ch ƒë√£ s·∫Øp x·∫øp
                        filteredList.clear();
                        filteredList.addAll(listThongKe);
                        adapter.notifyDataSetChanged(); // C·∫≠p nh·∫≠t RecyclerView


                        // N·∫øu kh√¥ng c√≥ d·ªØ li·ªáu
                        if (listThongKe.isEmpty()) {
                            Toast.makeText(this, "üì≠ Kh√¥ng c√≥ d·ªØ li·ªáu th·ªëng k√™", Toast.LENGTH_SHORT).show();
                        }

                    } catch (JSONException e) {
                        e.printStackTrace();
                        Toast.makeText(this, "‚ùå L·ªói ph√¢n t√≠ch d·ªØ li·ªáu JSON", Toast.LENGTH_SHORT).show();
                    }
                },
                error -> { // ‚ùå X·ª≠ l√Ω l·ªói khi g·ªçi API th·∫•t b·∫°i
                    error.printStackTrace();
                    Toast.makeText(this, "‚ùå L·ªói k·∫øt n·ªëi API: " + error.getMessage(), Toast.LENGTH_LONG).show();
                }
        );

        // Th√™m request v√†o h√†ng ƒë·ª£i
        queue.add(request);
    }

    /**
     * üîç L·ªçc danh s√°ch theo t·ª´ kh√≥a nh·∫≠p trong √¥ t√¨m ki·∫øm
     */
    private void filterList(String query) {
        filteredList.clear(); // X√≥a danh s√°ch hi·ªÉn th·ªã hi·ªán t·∫°i

        if (query.isEmpty()) {
            // N·∫øu chu·ªói t√¨m ki·∫øm r·ªóng ‚Üí hi·ªÉn th·ªã to√†n b·ªô
            filteredList.addAll(listThongKe);
        } else {
            // Chuy·ªÉn chu·ªói nh·∫≠p v·ªÅ ch·ªØ th∆∞·ªùng ƒë·ªÉ so s√°nh kh√¥ng ph√¢n bi·ªát hoa/th∆∞·ªùng
            String lowerQuery = query.toLowerCase().trim();

            // Duy·ªát to√†n b·ªô danh s√°ch g·ªëc v√† th√™m item c√≥ t√™n ph√π h·ª£p
            for (ThongKe tk : listThongKe) {
                if (tk.getEventName().toLowerCase().contains(lowerQuery)) {
                    filteredList.add(tk);
                }
            }
        }

        // C·∫≠p nh·∫≠t giao di·ªán RecyclerView
        adapter.notifyDataSetChanged();
    }

    /**
     * üß≠ Hi·ªÉn th·ªã h·ªôp tho·∫°i x√°c nh·∫≠n ƒëƒÉng xu·∫•t
     */
    private void showExitDialog() {
        new AlertDialog.Builder(this)
                .setTitle("X√°c nh·∫≠n ƒëƒÉng xu·∫•t")
                .setMessage("B·∫°n c√≥ ch·∫Øc mu·ªën ƒëƒÉng xu·∫•t v√† quay l·∫°i m√†n h√¨nh ƒëƒÉng nh·∫≠p kh√¥ng?")
                .setPositiveButton("C√≥", (dialog, which) -> {
                    // Chuy·ªÉn v·ªÅ m√†n h√¨nh ƒëƒÉng nh·∫≠p v√† x√≥a to√†n b·ªô Activity c≈©
                    Intent intent = new Intent(this, LoginActivity.class);
                    intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);
                    startActivity(intent);
                    finish();
                })
                .setNegativeButton("Kh√¥ng", null) // B·∫•m ‚ÄúKh√¥ng‚Äù th√¨ ƒë√≥ng dialog
                .show();
    }
}
